{"remainingRequest":"/Users/yaroslawbaklanov/Desktop/ufa_superhero/node_modules/thread-loader/dist/cjs.js!/Users/yaroslawbaklanov/Desktop/ufa_superhero/node_modules/babel-loader/lib/index.js!/Users/yaroslawbaklanov/Desktop/ufa_superhero/src/store/modules/user.js","dependencies":[{"path":"/Users/yaroslawbaklanov/Desktop/ufa_superhero/src/store/modules/user.js","mtime":1615891298004},{"path":"/Users/yaroslawbaklanov/Desktop/ufa_superhero/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yaroslawbaklanov/Desktop/ufa_superhero/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yaroslawbaklanov/Desktop/ufa_superhero/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGFjdGlvbnM6IHsKICAgIGFkZFVzZXJEYXRhOiBmdW5jdGlvbiBhZGRVc2VyRGF0YShjdHgpIHsKICAgICAgLy8gbG9hZCBkYXRhIHVzZXIKICAgICAgdmFyIGRhdGEgPSBbXTsKICAgICAgY3R4LmNvbW1pdCgic2V0VXNlckRhdGEiLCBkYXRhKTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgc2V0VXNlckRhdGE6IGZ1bmN0aW9uIHNldFVzZXJEYXRhKHN0YXRlLCBkYXRhKSB7CiAgICAgIHN0YXRlLnVzZXIgPSBkYXRhOwogICAgfQogIH0sCiAgc3RhdGU6IHsKICAgIHVzZXI6IFtdCiAgfSwKICBnZXR0ZXJzOiB7CiAgICBnZXREYXRhOiBmdW5jdGlvbiBnZXREYXRhKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS51c2VyOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/yaroslawbaklanov/Desktop/ufa_superhero/src/store/modules/user.js"],"names":["actions","addUserData","ctx","data","commit","mutations","setUserData","state","user","getters","getData"],"mappings":"AAAA,eAAe;AACbA,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,uBACKC,GADL,EACU;AACf;AACA,UAAMC,IAAI,GAAG,EAAb;AAEAD,MAAAA,GAAG,CAACE,MAAJ,CAAW,aAAX,EAA0BD,IAA1B;AACD;AANM,GADI;AASbE,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACGC,KADH,EACUJ,IADV,EACgB;AACvBI,MAAAA,KAAK,CAACC,IAAN,GAAaL,IAAb;AACD;AAHQ,GATE;AAcbI,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE;AADD,GAdM;AAiBbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OADO,mBACCH,KADD,EACQ;AACb,aAAOA,KAAK,CAACC,IAAb;AACD;AAHM;AAjBI,CAAf","sourcesContent":["export default {\n  actions: {\n    addUserData(ctx) {\n      // load data user\n      const data = []\n\n      ctx.commit(\"setUserData\", data)\n    }\n  },\n  mutations: {\n    setUserData(state, data) {\n      state.user = data;\n    }\n  },\n  state: {\n    user: []\n  },\n  getters: {\n    getData(state) {\n      return state.user;\n    }\n  }\n}"]}]}